/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import P1_T5_CapaOracle_FerrerMuñozCarles.ConnexioGeneral;
import P1_T5_Model_FerrerMuñozCarles.Ruta;
import P1_T5_Model_FerrerMuñozCarles.Ruta.RutaSortByDate;
import P1_T5_Model_FerrerMuñozCarles.Ruta.RutaSortByName;
import P1_T5_Model_FerrerMuñozCarles.Ruta.RutaSortByNumPunts;
import P1_T5_Model_FerrerMuñozCarles.Ruta.RutaSortByValo;
import P1_T5_Model_FerrerMuñozCarles.WikilocException;
import java.awt.Desktop;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import javax.security.auth.callback.ConfirmationCallback;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.MouseInputAdapter;
import javax.swing.table.JTableHeader;
/**
 *
 * @author isard
 */
public class Rutes extends javax.swing.JFrame {

    static {
        sdf = new SimpleDateFormat("dd MMMM yyyy, HH:mm");
    }
    
    private static SimpleDateFormat sdf;
    private ConnexioGeneral gBD = null;
    private static DefaultTableModel tRutes;
    private static List<Ruta> rutes = new ArrayList();
    private String mUser;
    private JTableHeader header;
    private static int anterior = -8;
    //Variables de Jasper
    private String urlJRS;
    private String userJRS;
    private String passwordJRS;
    
    
    /**
     * Creates new form Rutes
     */
    
    public Rutes(){
        initComponents();
    }
    public Rutes(ConnexioGeneral gbd, String user) {
        initComponents();
        setLocationRelativeTo(null);
        setExtendedState(MAXIMIZED_BOTH);
        this.gBD = gbd;
        txtUser.setText(user);
        mUser = user;
        rutes = gBD.obtenirLlistaRuta(user, null, null, "");
        initTable();
        header = jTable1.getTableHeader();
        header.addMouseListener(new ColumnHeaderClickListerner(jTable1));
        carregarJasper();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        txtUser = new javax.swing.JLabel();
        btnSession = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnCrear = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnFiltrar = new javax.swing.JButton();
        txtFiltrar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dtpInici = new com.toedter.calendar.JDateChooser();
        dtpFinal = new com.toedter.calendar.JDateChooser();
        btnCleanFilter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rutes");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        txtUser.setText("txtUser");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 46, 0, 0);
        getContentPane().add(txtUser, gridBagConstraints);

        btnSession.setText("Tancar Sessió");
        btnSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSessionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 18, 0, 0);
        getContentPane().add(btnSession, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setToolTipText("Doble clic per veure informació de la ruta. Si cliquem sobre el nom de les columnes podrem ordenar les rutes.");
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 923;
        gridBagConstraints.ipady = 310;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 158, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("<html><u>Rutes pròpies</u></html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 115;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Accions"));

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnImprimir.setText("Imprimir");
        btnImprimir.setEnabled(false);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Si el botó està desactivat tot i tenir una ruta seleccionada és degut a que la ruta té comentaris. Les rutes amb comentaris no es poden esborrar.");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar)
                    .addComponent(btnImprimir)
                    .addComponent(btnEditar)
                    .addComponent(btnCrear))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCrear)
                .addGap(70, 70, 70)
                .addComponent(btnEditar)
                .addGap(71, 71, 71)
                .addComponent(btnImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 61;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 18, 158, 6);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtre"));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nom o descripció:");

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Data creació:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("entre");

        btnCleanFilter.setText("Netejar filtre");
        btnCleanFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dtpInici, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dtpFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFiltrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCleanFilter)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addComponent(dtpFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dtpInici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFiltrar)
                            .addComponent(btnCleanFilter))))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 0);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSessionActionPerformed
        // TODO add your handling code here:
        Login login = new Login(gBD);
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSessionActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
        Date di = dtpInici.getDate();
        Date df = dtpFinal.getDate();
        String nom = txtFiltrar.getText();
        Timestamp tsDI = null;
        Timestamp tsDF = null;
        if (di!= null){
            tsDI = new Timestamp(di.getTime());
        }
        if (df != null){
            tsDF = new Timestamp(df.getTime());
        }
        if (di!= null && df != null){
            if (di.getTime()>df.getTime()){
                JOptionPane.showMessageDialog(this, "La data final ha de ser posterior a la data inicial", "Error",1);
                dtpInici.setDate(null);
                dtpFinal.setDate(null);
            } else {
                rutes = gBD.obtenirLlistaRuta(mUser, tsDI, tsDF, nom);
                initTable();
            }
        } else {
            rutes = gBD.obtenirLlistaRuta(mUser, tsDI, tsDF, nom);
            initTable();
        }
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // TODO add your handling code here:
        InfoRuta ir = new InfoRuta(gBD,null,'c', mUser);
        ir.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCrearActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        Boolean active = row !=-1;
        btnImprimir.setEnabled(active);
        btnEditar.setEnabled(active);
        if (row!=-1){
            btnEliminar.setEnabled(gBD.podemEliminarRuta(rutes.get(row)));
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        InfoRuta ir = new InfoRuta(gBD,rutes.get(row),'w', mUser);
        ir.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCleanFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanFilterActionPerformed
        // TODO add your handling code here:
        rutes = gBD.obtenirLlistaRuta(mUser, null, null, "");
        dtpInici.setDate(null);
        dtpFinal.setDate(null);
        txtFiltrar.setText("");
        initTable();
    }//GEN-LAST:event_btnCleanFilterActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        int res = JOptionPane.showConfirmDialog(null,"Confirmar", "Segur que vols eliminar la ruta "+rutes.get(row).getTitol()+"?", ConfirmationCallback.YES_NO_OPTION);
        if (res == JOptionPane.YES_OPTION) {
            try {
                if (gBD.eliminarRuta(rutes.get(row))){
                    JOptionPane.showMessageDialog(rootPane, "Ruta esborrada");
                    gBD.validateChanges();
                    rutes = gBD.obtenirLlistaRuta(mUser, null, null, "");
                    initTable();
                }
            } catch (WikilocException ex){
                    JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Procès cancel·lat");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
        int fila = jTable1.getSelectedRow();
        if (fila !=-1){
            try {
                String id = rutes.get(fila).getId()+"";
                informeJRS(id);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rutes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCleanFilter;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnSession;
    private com.toedter.calendar.JDateChooser dtpFinal;
    private com.toedter.calendar.JDateChooser dtpInici;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtFiltrar;
    private javax.swing.JLabel txtUser;
    // End of variables declaration//GEN-END:variables

    private void carregarJasper(){
        String fitxerConfigJRS = "informeJRS.xml";
        try {
            Properties props = new Properties();
            props.loadFromXML(new FileInputStream(fitxerConfigJRS));
            String[] claus = {"url", "user", "password"};
            String[] valors = new String[3];
            for (int i = 0; i < claus.length; i++) {
                valors[i] = props.getProperty(claus[i]);
                if (valors[i] == null || valors[i].isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "No es troba clau " + valors[i] + " en fitxer " + fitxerConfigJRS, "Error Jasper Report Server", JOptionPane.OK_OPTION);
                }
            }
            urlJRS = valors[0];
            userJRS = valors[1];
            passwordJRS = valors[2];
            JOptionPane.showMessageDialog(rootPane, "Paràmetres per connectar amb JRS recuperats.");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "No es troba fitxer " + fitxerConfigJRS + " - No es podrà executar cap informe", "Error Jasper Report Server", JOptionPane.OK_OPTION);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Problema en carregar fitxer propietats - No es podrà executar cap informe", "Error Jasper Report Server", JOptionPane.OK_OPTION);
        }
    }
    
    private void informeJRS(String codiRuta) throws IOException {
        int BUFFER_SIZE = 4096;
        String url = urlJRS + "RutesPunts.pdf"
                + "?Ruta=" + codiRuta;      // Emplenem el paràmetre "codi" de l'informe
        // Si hi ha més paràmetres a passar, cal concatenar-los com "&" com:
        // + "&nomParametre=valor&nomParametre=valor..."
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        con.setRequestMethod("GET");
        String autenticacio = Base64.getEncoder().encodeToString((userJRS + ":" + passwordJRS).getBytes());
        con.setRequestProperty("Authorization", "Basic " + autenticacio);
        int responseCode = con.getResponseCode();
        if (responseCode == HttpURLConnection.HTTP_OK) {
            String fileName = "";
            String disposition = con.getHeaderField("Content-Disposition");
            String contentType = con.getContentType();
            int contentLength = con.getContentLength();

            if (disposition != null) {
                // Obtenir el nom del fitxer a partir de la capçalera (Content-Disposition)
                int index = disposition.indexOf("filename=");
                if (index > 0) {
                    fileName = disposition.substring(index + 10,
                            disposition.length() - 1);
                }
            } else {
                // Obtenir el nom del fitxer de dins la URL
                int posArguments = url.lastIndexOf("?");
                if (posArguments == -1) { // No hi ha arguments
                    fileName = url.substring(url.lastIndexOf("/") + 1,
                            url.length());
                } else { // Hi ha arguments i cal eliminar-los per obtenir el nom del fitxer
                    fileName = url.substring(url.lastIndexOf("/") + 1, posArguments);
                }
            }


            // Obrim InputStream des de HTTP connection
            InputStream inputStream = con.getInputStream();
            // Obrim OutputStream per enregistrar el fitxer
            FileOutputStream outputStream = new FileOutputStream(fileName);
            // Llegim i escrivim
            int bytesRead = -1;
            byte[] buffer = new byte[BUFFER_SIZE];
            while ((bytesRead = inputStream.read(buffer)) != -1) {
                outputStream.write(buffer, 0, bytesRead);
            }
            outputStream.close();
            inputStream.close();

            // Intentem obrir-lo en alguna aplicació del SO
            if (Desktop.isDesktopSupported()) {
                try {
                    Desktop.getDesktop().open(new File(fileName));
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(rootPane, "No hi ha aplicacions disponibles per obrir el fitxer");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Error en crear informe");
        }
        con.disconnect();
    }
    
    private void initTable() {
        tRutes = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        
        removeAllRows(tRutes);
        
       
        jTable1.setModel(tRutes);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        
        tRutes.addColumn("Nom");
        tRutes.addColumn("Data creació");
        tRutes.addColumn("Número de punts");
        tRutes.addColumn("Valoració mitja");
        Date date = null;
        for (Ruta r : rutes){
            Timestamp tms = r.getData_creacio();
            date = new Date(tms.getTime());
            tRutes.addRow(new Object[]{r.getTitol(), sdf.format(date), r.getNumPunts(),r.getNota_mitja_valoracio()});
        }
        jTable1.addMouseListener(new MouseAdapter(){
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    InfoRuta ir = new InfoRuta(gBD, rutes.get(row), 'r', mUser);
                    ir.setVisible(true);
                    Rutes.this.dispose();
                    
                }
            }
        });
    }
    
    private static void removeAllRows(DefaultTableModel model) {
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
            
        }
    }

    private static class ColumnHeaderClickListerner extends MouseInputAdapter  {

        private final JTable table;
        public ColumnHeaderClickListerner(JTable table) {
            this.table = table;
        }

        @Override
        public void mouseClicked(MouseEvent e) {
            int columnIndex = table.columnAtPoint(e.getPoint());
            Rutes.removeAllRows(tRutes);
            Date date = null;
            if (columnIndex != anterior){
                anterior = columnIndex;
                switch (columnIndex){
                case 0:
                    
                    Collections.sort(rutes, new RutaSortByName());

                    for (Ruta r : rutes){
                        Timestamp tms = r.getData_creacio();
                        date = new Date(tms.getTime());
                        tRutes.addRow(new Object[]{r.getTitol(), sdf.format(date), r.getNumPunts(),r.getNota_mitja_valoracio()});
                    }
                    break;
                case 1:
                    Collections.sort(rutes, new RutaSortByDate());

                    for (Ruta r : rutes){
                        Timestamp tms = r.getData_creacio();
                        date = new Date(tms.getTime());
                        tRutes.addRow(new Object[]{r.getTitol(), sdf.format(date), r.getNumPunts(),r.getNota_mitja_valoracio()});
                    }
                    break;
                case 2:
                    Collections.sort(rutes, new RutaSortByNumPunts());

                    for (Ruta r : rutes){
                        Timestamp tms = r.getData_creacio();
                        date = new Date(tms.getTime());
                        tRutes.addRow(new Object[]{r.getTitol(), sdf.format(date), r.getNumPunts(),r.getNota_mitja_valoracio()});
                    }
                    break;
                case 3:
                    Collections.sort(rutes, new RutaSortByValo());

                    for (Ruta r : rutes){
                        Timestamp tms = r.getData_creacio();
                        date = new Date(tms.getTime());
                        tRutes.addRow(new Object[]{r.getTitol(), sdf.format(date), r.getNumPunts(),r.getNota_mitja_valoracio()});
                    }
                    break;
                }
            }
            else {
                anterior = columnIndex;
                Collections.sort(rutes, Collections.reverseOrder());
                for (Ruta r : rutes){
                        Timestamp tms = r.getData_creacio();
                        date = new Date(tms.getTime());
                        tRutes.addRow(new Object[]{r.getTitol(), sdf.format(date), r.getNumPunts(),r.getNota_mitja_valoracio()});
                }
            }
        }
        
    }
}
